import{r as t,h as a,H as s,g as i}from"./p-84c6d66b.js";import{Logger as e,Hub as n}from"@aws-amplify/core";import{A as r}from"./p-417bb5ea.js";import{appendToCognitoUserAgent as o,Auth as h}from"@aws-amplify/auth";import"./p-26837fd8.js";import{T as c,U as l,A as u,R as p,N as m,c as f}from"./p-2915ed18.js";import{d as g,o as d}from"./p-a1e1bc18.js";import{c as y}from"./p-32f4202a.js";const w={[r.SignIn]:"sign-in",[r.ConfirmSignIn]:"confirm-sign-in",[r.SignUp]:"sign-up",[r.ConfirmSignUp]:"confirm-sign-up",[r.ForgotPassword]:"forgot-password",[r.ResetPassword]:"require-new-password",[r.VerifyContact]:"verify-contact",[r.TOTPSetup]:"totp-setup",[r.Loading]:"loading"},b=new e("Authenticator"),x=class{constructor(a){t(this,a),this.initialAuthState=r.SignIn,this.handleAuthStateChange=()=>{},this.authState=r.Loading,this.toastMessage="",this.handleExternalAuthEvent=({payload:t})=>{switch(t.event){case"cognitoHostedUI":case"signIn":y(t.data,g);break;case"cognitoHostedUI_failure":case"parsingUrl_failure":case"signOut":case"customGreetingSignOut":return g(this.initialAuthState)}},this.handleToastEvent=({payload:t})=>{switch(t.event){case c:t.message&&(this.toastMessage=t.message)}}}async componentWillLoad(){d((t,a)=>{this.onAuthStateChange(t,a),this.toastMessage=""}),n.listen(l,this.handleToastEvent),n.listen(u,this.handleExternalAuthEvent),o("amplify-authenticator");const t=localStorage.getItem(p);localStorage.removeItem(p),"true"!==t&&await this.checkUser()}async checkUser(){if(!h||"function"!=typeof h.currentAuthenticatedUser)throw new Error(m);return h.currentAuthenticatedUser().then(t=>{g(r.SignedIn,t)}).catch(async()=>{let t=null;try{t=localStorage.getItem(f)}catch(a){b.debug("Failed to get the auth state from local storage",a)}try{t===r.SignedIn&&await h.signOut(),g(this.initialAuthState)}catch(a){b.debug("Failed to sign out",a)}})}async onAuthStateChange(t,a){if(void 0===t)return b.error("nextAuthState cannot be undefined");b.info("Inside onAuthStateChange Method current authState:",this.authState),this.authState=t===r.SignedOut?this.initialAuthState:t,this.authData=a,this.authData&&b.log("Auth Data was set:",this.authData),this.authState===t&&(this.handleAuthStateChange(this.authState,this.authData),b.info("authState has been updated to "+this.authState))}getAuthComponent(t){switch(t){case r.SignIn:return a("amplify-sign-in",{federated:this.federated,usernameAlias:this.usernameAlias});case r.ConfirmSignIn:return a("amplify-confirm-sign-in",{user:this.authData});case r.SignUp:return a("amplify-sign-up",{usernameAlias:this.usernameAlias});case r.ConfirmSignUp:return a("amplify-confirm-sign-up",{user:this.authData,usernameAlias:this.usernameAlias});case r.ForgotPassword:return a("amplify-forgot-password",{usernameAlias:this.usernameAlias});case r.ResetPassword:return a("amplify-require-new-password",{user:this.authData});case r.VerifyContact:return a("amplify-verify-contact",{user:this.authData});case r.TOTPSetup:return a("amplify-totp-setup",{user:this.authData});case r.Loading:return a("div",null,"Loading...");default:throw new Error("Unhandled auth state: "+t)}}getSlotWithAuthComponent(t){const s=this.getAuthComponent(t),i=w[t],e=null===this.el.querySelector(`[slot="${i}"]`);return a("slot",{name:i},e&&s)}componentWillUnload(){return n.remove(u,this.handleExternalAuthEvent),n.remove(l,this.handleToastEvent),d}render(){return a(s,null,this.toastMessage?a("amplify-toast",{message:this.toastMessage,handleClose:()=>{this.toastMessage=""},"data-test":"authenticator-error"}):null,this.authState===r.SignedIn?[a("slot",{name:"greetings"}),a("slot",null)]:a("div",{class:"auth-container"},this.getSlotWithAuthComponent(this.authState)))}get el(){return i(this)}};x.style=":host{--background-color:var(--amplify-background-color);--width:28.75rem;--min-width:20rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;--box-shadow:1px 1px 4px 0 rgba(0, 0, 0, 0.15);--border-radius:6px;--padding:35px 40px;--margin-bottom:20px;--container-height:100vh;--container-display:flex;--container-justify:center;--container-align:center}.auth-container{display:var(--container-display);-ms-flex-pack:var(--container-justify);justify-content:var(--container-justify);-ms-flex-align:var(--container-align);align-items:var(--container-align);min-height:var(--container-height)}";export{x as amplify_authenticator}